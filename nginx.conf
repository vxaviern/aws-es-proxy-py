user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.fedora.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {

    access_log  /var/log/nginx/access.log;

    include     /etc/nginx/mime.types;

    server {
	
		 rewrite ^/$https://<EC2-PUBLIC-IP>/_plugin/kibana/app/kibana redirect;
		 listen 443 default_server ssl;
		 server_name $host;
		 
		 ssl on;
		 ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		 
		 ssl_certificate 		/etc/nginx/cert.crt;
		 ssl_certificate_key    /etc/nginx/cert.key;
		  
		 include /etc/nginx/default.d/*.conf;
		 
		 location / {
			proxy_set_header Host $host;
			proxy_pass http://localhost:9200;
			
			proxy_cache off;
			
			add_header 'Cache_Control' 'no_store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
			
	  
		 location = /greet {
			return 200 'hello this is xavier from nginx';
		 }
		 
		 location /_plugin/kibana {
			 proxy_pass http://localhost:9200;
			 rewrite ^/$https://<EC2-PUBLIC-IP>/_plugin/kibana/app/kibana redirect;
		 }
	
		 error_page 404 /404.html; 
			location = /40x.html {
		 }
		 
		 error_page 500 502 503 504 /50x.html; 
			location = /50x.html {
		 }
	
	}
	
}

# nohup python3 aws_es_proxy_py -r us-east-1 -e <ES-DOMAIN> -lh 0.0.0.0 -p 9200 &

# https://<EC2-PUBLIC-IP>/_plugin/kibana/app/kibana